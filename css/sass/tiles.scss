@import 'reset';

@mixin clear-fix() {
  *zoom: 1;

  &:before,
  &:after
  {
	content: ' ';
	display: table;
  }

  &:after
  {
	clear: both;
  }
}

@mixin transition($values...) {
  -webkit-transition: $values;
  -moz-transition: $values;
  transition: $values;
}

@mixin perspective($value: 1000) {
  -webkit-perspective: $value;
  perspective: $value;
}

@mixin transform-style($value: preserve-3d) {
  -webkit-transform-style: $value;
  transform-style: $value;
}

@mixin transform($values...) {
  -webkit-transform: $values;
  -ms-transform: $values;
  transform: $values;
}

@mixin backface-visibility($value: hidden) {
  -webkit-backface-visibility: $value;
  -moz-backface-visibility: $value;
  -ms-backface-visibility: $value;
  backface-visibility: $value;
}

$columns: (6, 5, 4, 3, 2, 1);
$tile-size: 200px;
$tiles-border: 2px;

html
{
  font-size: 11pt;
  font-family: 'Open Sans', OpenSans, Arial, sans-serif;
  font-weight: 300;
}

body
{
  padding: 50px 0 0;

  background: #191818;

  overflow: hidden;
}

.title
{
  margin: 0;

  color: #999;
  font-size: 175%;
  font-weight: 300;
  text-align: center;
  line-height: $tile-size;
}

.tiles
{
  width: nth($columns, 1) * ($tile-size + 2 * $tiles-border);
  margin: 0 auto;

  border: $tiles-border solid transparent;

  text-align: center;

  @include perspective();

  @include clear-fix();

  &.is-loading
  {
	background-image: url('/images/loading.gif');
	background-repeat: no-repeat;
	background-position: center 90px;
  }

  .tile
  {
	width: $tile-size;
	height: $tile-size;

	border: $tiles-border solid transparent;

	opacity: 1;
	display: block;

	position: relative;

	float: left;

	@include transform-style();
	@include transition(all 0s);

	&:hover
	{
	  .label
	  {
		opacity: 1;
	  }
	}

	&.is-flipping
	{
	  @include transition(all 0.5s);
	  @include transform(rotateY(180deg));
	}

	&.is-loading
	{
	  opacity: 0;
	}

	.label
	{
	  padding: 0.5em;

	  background: rgba(#000, 0.5);

	  color: #fff;
	  font-size: 125%;
	  text-align: center;
	  text-shadow: 0 1px 0 #000;
	  text-decoration: none;

	  opacity: 0;

	  position: absolute;
	  left: 0;
	  right: 0;
	  bottom: 0;

	  @include transition(opacity 0.15s);
	}

	a
	{
	  width: 100%;
	  height: 100%;

	  display: block;
	  z-index: 2;

	  position: absolute;
	  top: 0;
	  left: 0;

	  @include backface-visibility();

	  &.is-flipped
	  {
		@include transform(rotateY(180deg));
	  }
	}

	img
	{
	  width: 100%;
	  height: 100%;

	  display: block;
	}
  }
}

@each $column in $columns
{
  @media all and (max-width: ($column + 1) * ($tile-size + 2 * $tiles-border)) {

	.tiles
	{
	  width: $column * ($tile-size + 2 * $tiles-border);
	}
  }
}